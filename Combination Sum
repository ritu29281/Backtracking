Input: candidates = [2,3,6,7], target = 7
Output: [[2,2,3],[7]]
Explanation:
2 and 3 are candidates, and 2 + 2 + 3 = 7. Note that 2 can be used multiple times.
7 is a candidate, and 7 = 7.
These are the only two combinations.

CODE:

vector<vector<int>>ans;
    void solve(vector<int>& candidates, int target, vector<int> curr, int currsum, int idx){
        if(currsum>target) return;
        if(currsum==target){
            ans.push_back(curr);
            return;
        }
        for(int i=idx;i<candidates.size();i++){
            curr.push_back(candidates[i]);
            currsum+=candidates[i];
            solve(candidates, target, curr, currsum, i);
            curr.pop_back();
            currsum-=candidates[i];
        }
    }

        

    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
        int n=candidates.size();
        vector<int>curr;
        solve(candidates,target,curr,0,0);
        return ans;
    }
    
